{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\n//create action\nexport const createuser = createAsyncThunk(async (data, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  console.log(\"data=\", data);\n  const response = await fetch(\"https://641dd63d945125fff3d75742.mockapi.io/crud\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  try {\n    const result = await response.json();\n    console.log(\"result=\", result);\n    return result;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\n//read action\nexport const showUser = createAsyncThunk('showuser', async (args, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  console.log(\"\");\n  const response = await fetch(\"https://641dd63d945125fff3d75742.mockapi.io/crud\");\n});\nexport const userDetail = createSlice({\n  name: \"userDetail\",\n  initialState: {\n    users: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: {\n    [createuser.pending]: state => {\n      state.loading = true;\n    },\n    [createuser.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.users.push(action.payload);\n    },\n    [createuser.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.payload.message;\n    }\n  }\n});\nexport default userDetail.reducer;\n\n// export const createUser=createAsyncThunk(\n//   'createuser',\n//   async(data,{rejectWithValue})=>{\n//     console.log(\"data\",data);\n//     const response=await fetch(\n//       \"https://641dd63d945125fff3d75742.mockapi.io/crud\",\n//       {\n//         method:\"POST\",\n//         headers:{\n//           \"content-type\":\"application/json\",\n//         },\n//         body:JSON.stringify(data),\n//       }\n//     );\n//     try{\n//       const result=await response.json();\n//       return result;\n//     }catch(error){\n//       return rejectWithValue(error)\n//     }\n//   }\n// )","map":{"version":3,"names":["createAsyncThunk","createSlice","createuser","data","_ref","rejectWithValue","console","log","response","fetch","method","headers","body","JSON","stringify","result","json","error","showUser","args","_ref2","userDetail","name","initialState","users","loading","reducers","extraReducers","pending","state","fulfilled","action","push","payload","rejected","message","reducer"],"sources":["/home/sid/React/CRUD/my-app/src/features/userDetailSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\n//create action\nexport const createuser=createAsyncThunk(\n  async(data,{rejectWithValue})=>{\n    console.log(\"data=\",data)\n    const response=await fetch(\"https://641dd63d945125fff3d75742.mockapi.io/crud\",\n    {\n      method:\"POST\",\n      headers:{\"Content-Type\":\"application/json\"},\n      body:JSON.stringify(data),\n    });\n    try{\n      const result=await response.json()\n      console.log(\"result=\",result)\n      return result;\n    }\n    catch(error){\n      return rejectWithValue(error);\n\n    }\n  }\n)\n//read action\nexport const showUser=createAsyncThunk(\n  'showuser',\n  async(args,{rejectWithValue})=>{\n    console.log(\"\")\n    const response=await fetch(\"https://641dd63d945125fff3d75742.mockapi.io/crud\")\n\n\n  }\n)\n\nexport const userDetail=createSlice({\n  name:\"userDetail\",\n  initialState:{\n    users:[],\n    loading:false,\n    error:null,\n  },\n  reducers:{},\n  extraReducers:{\n    [createuser.pending]:(state)=>{\n      state.loading=true;\n    },\n    [createuser.fulfilled]:(state,action)=>{\n      state.loading=false;\n      state.users.push(action.payload);\n    },\n    [createuser.rejected]:(state,action)=>{\n      state.loading=false;\n      state.error=action.payload.message;\n    }\n  },\n})\n\nexport default userDetail.reducer;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export const createUser=createAsyncThunk(\n//   'createuser',\n//   async(data,{rejectWithValue})=>{\n//     console.log(\"data\",data);\n//     const response=await fetch(\n//       \"https://641dd63d945125fff3d75742.mockapi.io/crud\",\n//       {\n//         method:\"POST\",\n//         headers:{\n//           \"content-type\":\"application/json\",\n//         },\n//         body:JSON.stringify(data),\n//       }\n//     );\n//     try{\n//       const result=await response.json();\n//       return result;\n//     }catch(error){\n//       return rejectWithValue(error)\n//     }\n//   }\n// )"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,UAAU,GAACF,gBAAgB,CACtC,OAAMG,IAAI,EAAAC,IAAA,KAAqB;EAAA,IAApB;IAACC;EAAe,CAAC,GAAAD,IAAA;EAC1BE,OAAO,CAACC,GAAG,CAAC,OAAO,EAACJ,IAAI,CAAC;EACzB,MAAMK,QAAQ,GAAC,MAAMC,KAAK,CAAC,kDAAkD,EAC7E;IACEC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MAAC,cAAc,EAAC;IAAkB,CAAC;IAC3CC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACX,IAAI;EAC1B,CAAC,CAAC;EACF,IAAG;IACD,MAAMY,MAAM,GAAC,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAClCV,OAAO,CAACC,GAAG,CAAC,SAAS,EAACQ,MAAM,CAAC;IAC7B,OAAOA,MAAM;EACf,CAAC,CACD,OAAME,KAAK,EAAC;IACV,OAAOZ,eAAe,CAACY,KAAK,CAAC;EAE/B;AACF,CAAC,CACF;AACD;AACA,OAAO,MAAMC,QAAQ,GAAClB,gBAAgB,CACpC,UAAU,EACV,OAAMmB,IAAI,EAAAC,KAAA,KAAqB;EAAA,IAApB;IAACf;EAAe,CAAC,GAAAe,KAAA;EAC1Bd,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;EACf,MAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAC,kDAAkD,CAAC;AAGhF,CAAC,CACF;AAED,OAAO,MAAMY,UAAU,GAACpB,WAAW,CAAC;EAClCqB,IAAI,EAAC,YAAY;EACjBC,YAAY,EAAC;IACXC,KAAK,EAAC,EAAE;IACRC,OAAO,EAAC,KAAK;IACbR,KAAK,EAAC;EACR,CAAC;EACDS,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAAC;IACZ,CAACzB,UAAU,CAAC0B,OAAO,GAAGC,KAAK,IAAG;MAC5BA,KAAK,CAACJ,OAAO,GAAC,IAAI;IACpB,CAAC;IACD,CAACvB,UAAU,CAAC4B,SAAS,GAAE,CAACD,KAAK,EAACE,MAAM,KAAG;MACrCF,KAAK,CAACJ,OAAO,GAAC,KAAK;MACnBI,KAAK,CAACL,KAAK,CAACQ,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAClC,CAAC;IACD,CAAC/B,UAAU,CAACgC,QAAQ,GAAE,CAACL,KAAK,EAACE,MAAM,KAAG;MACpCF,KAAK,CAACJ,OAAO,GAAC,KAAK;MACnBI,KAAK,CAACZ,KAAK,GAACc,MAAM,CAACE,OAAO,CAACE,OAAO;IACpC;EACF;AACF,CAAC,CAAC;AAEF,eAAed,UAAU,CAACe,OAAO;;AAyBjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}